class Solution {
    public int[] frequencySort(int[] nums) {
        Map<Integer,Integer>map=new HashMap<>();
        for(int num:nums){
            map.put(num,map.getOrDefault(num,0)+1);
        }
         PriorityQueue<Map.Entry<Integer, Integer>> maxHeap = new PriorityQueue<>(
            (a, b) -> a.getValue().equals(b.getValue()) ? b.getKey() - a.getKey() : a.getValue() - b.getValue()
        );
        for(Map.Entry<Integer,Integer>entry:map.entrySet()){
            maxHeap.add(entry);
        }
        int n=nums.length;
        int[] ans=new int[n];
        int index=0;
        while(maxHeap.size()>0){
            int freq= maxHeap.peek().getValue();
            int el=maxHeap.peek().getKey() ;
           for(int i=1;i<=freq;i++){
            ans[index++]=el;
           }
           maxHeap.poll();
        }
        return ans;
    }
}
